{"ast":null,"code":"var _jsxFileName = \"/Users/zachary/work/\\u6C42\\u804C/chess_knight/frontend/src/common/Board.js\";\nimport React from 'react';\nimport { KnightWhite, Destination, Knight, DestinationWhite } from './Icon';\nimport './Board.scss';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.init = () => {\n      this.setState({\n        boardElements: [0, 1, 2, 3, 4, 5, 6, 7]\n      });\n    };\n\n    this.isKnight = (x, y) => {\n      console.log(this.props.knight);\n      const knight = this.props.knight;\n      return x === knight[0] && y === knight[1] && (x % 2 === 0 && y % 2 === 0 || x % 2 === 1 && y % 2 === 1);\n    };\n\n    this.isKnightWhite = (x, y) => {\n      const knight = this.props.knight;\n      return x === knight[0] && y === knight[1] && (x % 2 === 0 && y % 2 === 1 || x % 2 === 1 && y % 2 === 0);\n    };\n\n    this.isDestination = (x, y) => {\n      const destination = this.props.destination;\n      return x === destination[0] && y === destination[1] && (x % 2 === 0 && y % 2 === 0 || x % 2 === 1 && y % 2 === 1);\n    };\n\n    this.isDestinationWhite = (x, y) => {\n      const destination = this.props.destination;\n      return x === destination[0] && y === destination[1] && (x % 2 === 0 && y % 2 === 1 || x % 2 === 1 && y % 2 === 0);\n    };\n\n    this.state = {\n      boardSize: 8,\n      boardElements: []\n    };\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  render() {\n    const boardElements = this.state.boardElements;\n    const _this$props = this.props,\n          knight = _this$props.knight,\n          destination = _this$props.destination;\n    console.log(knight, destination);\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, boardElements.map(x => React.createElement(\"li\", {\n      key: x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, boardElements.map(y => React.createElement(\"li\", {\n      key: \"\".concat(x, \"-\").concat(y),\n      onClick: this.move,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.isKnight(x, y) && React.createElement(Knight, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), this.isKnightWhite(x, y) && React.createElement(KnightWhite, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), this.isDestination(x, y) && React.createElement(Destination, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), this.isDestinationWhite(x, y) && React.createElement(DestinationWhite, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/zachary/work/求职/chess_knight/frontend/src/common/Board.js"],"names":["React","KnightWhite","Destination","Knight","DestinationWhite","Board","Component","constructor","props","init","setState","boardElements","isKnight","x","y","console","log","knight","isKnightWhite","isDestination","destination","isDestinationWhite","state","boardSize","componentDidMount","render","map","move"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { KnightWhite,  Destination, Knight, DestinationWhite } from './Icon';\nimport './Board.scss';\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          boardSize: 8,\n          boardElements: []\n        }\n    }\n\n    componentDidMount() {\n      this.init();\n    }\n\n    init = () => {\n      this.setState({\n        boardElements: [0,1,2,3,4,5,6,7]\n      })\n    }\n\n    isKnight = (x, y) => {\n      console.log(this.props.knight);\n      const { knight } = this.props;\n      return x === knight[0] && \n             y === knight[1] && \n             ((x%2 === 0 && y%2 === 0) || \n             (x%2 === 1 && y%2 === 1)) ;\n    }\n\n    isKnightWhite = (x, y) => {\n      const { knight} = this.props;\n      return x === knight[0] && \n             y === knight[1] && \n             ((x%2 === 0 && y%2 === 1) || \n             (x%2 === 1 && y%2 === 0));\n    }\n\n    isDestination = (x, y) => {\n      const { destination } = this.props;\n      return x === destination[0] &&\n             y === destination[1] &&\n             ((x%2 === 0 && y%2 === 0) || \n             (x%2 === 1 && y%2 === 1));\n    }\n\n    isDestinationWhite = (x, y) => {\n      const { destination } = this.props;\n      return x === destination[0] &&\n             y === destination[1] &&\n             ((x%2 === 0 && y%2 === 1) || \n             (x%2 === 1 && y%2 === 0));\n    }\n\n\n    render() {\n        const { boardElements } = this.state;\n        const { knight, destination } = this.props;\n        console.log(knight, destination);\n        return (\n          <ul>\n            {boardElements.map(x => \n              <li key={x}>\n                <ul>\n                  {boardElements.map(y => \n                    <li key={`${x}-${y}`} \n                        onClick={this.move}>\n                      {this.isKnight(x, y) && <Knight />}\n                      {this.isKnightWhite(x, y) && <KnightWhite />}\n                      {this.isDestination(x, y) && <Destination />}\n                      {this.isDestinationWhite(x, y) && <DestinationWhite />}\n                    </li>\n                  )}\n                </ul>\n              </li>\n            )}\n          </ul>\n        ) \n    }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}