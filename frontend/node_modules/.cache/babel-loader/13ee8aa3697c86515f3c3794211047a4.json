{"ast":null,"code":"var _jsxFileName = \"/Users/zachary/work/\\u6C42\\u804C/chess_knight/frontend/src/common/Board.js\";\nimport React from 'react';\nimport { KnightWhite, Destination, Knight, DestinationWhite } from './Icon';\nimport './Board.scss';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.init = () => {\n      this.setState({\n        boardElements: [0, 1, 2, 3, 4, 5, 6, 7]\n      });\n    };\n\n    this.isKnight = (x, y) => {\n      // console.log(this.props.knight);\n      const knight = this.props.knight;\n      return x === knight[0] && y === knight[1] && (x % 2 === 0 && y % 2 === 0 || x % 2 === 1 && y % 2 === 1);\n    };\n\n    this.isKnightWhite = (x, y) => {\n      const knight = this.props.knight;\n      return x === knight[0] && y === knight[1] && (x % 2 === 0 && y % 2 === 1 || x % 2 === 1 && y % 2 === 0);\n    };\n\n    this.isDestination = (x, y) => {\n      const destination = this.props.destination;\n      return x === destination[0] && y === destination[1] && (x % 2 === 0 && y % 2 === 0 || x % 2 === 1 && y % 2 === 1);\n    };\n\n    this.isDestinationWhite = (x, y) => {\n      const destination = this.props.destination;\n      return x === destination[0] && y === destination[1] && (x % 2 === 0 && y % 2 === 1 || x % 2 === 1 && y % 2 === 0);\n    };\n\n    this.moveKnight = (x, y) => {\n      // prevent moving out of board\n      if (x < 0 || x > 7 || y < 0 || y > 7) return;\n\n      if (this.isValidMove(x, y)) {\n        const move = this.props.move;\n        move(x, y);\n      }\n    };\n\n    this.isValidMove = (x, y) => {\n      console.log('=======');\n      const knight = this.props.knight; //all possible movements\n\n      const row = [1, 1, -1, -1, 2, 2, -2, -2];\n      const col = [2, -2, 2, -2, 1, -1, 1, -1];\n\n      for (let i = 0; i < row.length; i++) {\n        console.log('====inside loop', i);\n\n        if (knight[0] + row[i] === x && knight[1] + col[i] === y) {\n          console.log('valid move');\n          return true;\n        }\n      }\n\n      console.error('not valid move');\n      return false; // if (knight[0]+1 === x && knight[1]+2 === y) {\n      // }\n      // if (knight[0]+1 === x && knight[1]-2 === y){\n      // }\n      // if (knight[0]-1 === x && knight[1]+2 === y){\n      // }\n      // if (knight[0]-1 === x && knight[1]-2 === y){\n      // }\n      // if (knight[0]+2 === x && knight[1]+1 === y){\n      // }\n      // if (knight[0]+2 === x && knight[1]-1 === y){\n      // }\n      // if (knight[0]-2 === x && knight[1]+1 === y){\n      // }\n      // if (knight[0]-2 === x && knight[1]-1 === y){\n      // }\n    };\n\n    this.state = {\n      boardSize: 8,\n      boardElements: []\n    };\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  render() {\n    const boardElements = this.state.boardElements;\n    const _this$props = this.props,\n          knight = _this$props.knight,\n          destination = _this$props.destination;\n    console.log(knight, destination);\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, boardElements.map(x => React.createElement(\"li\", {\n      key: x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, boardElements.map(y => React.createElement(\"li\", {\n      key: \"\".concat(x, \"-\").concat(y),\n      onClick: () => this.moveKnight(x, y),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.isKnight(x, y) && React.createElement(Knight, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), this.isKnightWhite(x, y) && React.createElement(KnightWhite, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), this.isDestination(x, y) && React.createElement(Destination, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), this.isDestinationWhite(x, y) && React.createElement(DestinationWhite, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/zachary/work/求职/chess_knight/frontend/src/common/Board.js"],"names":["React","KnightWhite","Destination","Knight","DestinationWhite","Board","Component","constructor","props","init","setState","boardElements","isKnight","x","y","knight","isKnightWhite","isDestination","destination","isDestinationWhite","moveKnight","isValidMove","move","console","log","row","col","i","length","error","state","boardSize","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { KnightWhite,  Destination, Knight, DestinationWhite } from './Icon';\nimport './Board.scss';\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          boardSize: 8,\n          boardElements: []\n        }\n    }\n\n    componentDidMount() {\n      this.init();\n    }\n\n    init = () => {\n      this.setState({\n        boardElements: [0,1,2,3,4,5,6,7]\n      })\n    }\n\n    isKnight = (x, y) => {\n      // console.log(this.props.knight);\n      const { knight } = this.props;\n      return x === knight[0] && \n             y === knight[1] && \n             ((x%2 === 0 && y%2 === 0) || \n             (x%2 === 1 && y%2 === 1)) ;\n    }\n\n    isKnightWhite = (x, y) => {\n      const { knight} = this.props;\n      return x === knight[0] && \n             y === knight[1] && \n             ((x%2 === 0 && y%2 === 1) || \n             (x%2 === 1 && y%2 === 0));\n    }\n\n    isDestination = (x, y) => {\n      const { destination } = this.props;\n      return x === destination[0] &&\n             y === destination[1] &&\n             ((x%2 === 0 && y%2 === 0) || \n             (x%2 === 1 && y%2 === 1));\n    }\n\n    isDestinationWhite = (x, y) => {\n      const { destination } = this.props;\n      return x === destination[0] &&\n             y === destination[1] &&\n             ((x%2 === 0 && y%2 === 1) || \n             (x%2 === 1 && y%2 === 0));\n    }\n\n    moveKnight = (x, y) => {\n      // prevent moving out of board\n      if (x<0 || x>7 || y<0 || y>7) return; \n\n\n      if (this.isValidMove(x, y)){\n          const { move } = this.props; \n          move(x,y);\n      }\n    }\n\n    isValidMove = (x, y) => {\n      console.log('=======');\n      const { knight } = this.props;\n      //all possible movements\n      const row = [1,1,-1,-1,2,2,-2,-2];\n      const col = [2,-2,2,-2,1,-1,1,-1];\n\n      for(let i = 0; i < row.length; i++) {\n        console.log('====inside loop', i);\n        if(knight[0] + row[i] === x && knight[1] + col[i] === y) {\n          console.log('valid move');\n          return true;\n        }\n          \n      }\n\n      console.error('not valid move');\n      return false;\n\n      // if (knight[0]+1 === x && knight[1]+2 === y) {\n\n      // }\n\n      // if (knight[0]+1 === x && knight[1]-2 === y){\n\n      // }\n\n      // if (knight[0]-1 === x && knight[1]+2 === y){\n\n      // }\n\n      // if (knight[0]-1 === x && knight[1]-2 === y){\n\n      // }\n\n      // if (knight[0]+2 === x && knight[1]+1 === y){\n\n      // }\n\n      // if (knight[0]+2 === x && knight[1]-1 === y){\n\n      // }\n\n      // if (knight[0]-2 === x && knight[1]+1 === y){\n\n      // }\n\n      // if (knight[0]-2 === x && knight[1]-1 === y){\n\n      // }\n    }\n\n    render() {\n        const { boardElements } = this.state;\n        const { knight, destination } = this.props;\n        console.log(knight, destination);\n        return (\n          <ul>\n            {boardElements.map(x => \n              <li key={x}>\n                <ul>\n                  {boardElements.map(y => \n                    <li key={`${x}-${y}`} \n                        onClick={() => this.moveKnight(x, y)}>\n                      {this.isKnight(x, y) && <Knight />}\n                      {this.isKnightWhite(x, y) && <KnightWhite />}\n                      {this.isDestination(x, y) && <Destination />}\n                      {this.isDestinationWhite(x, y) && <DestinationWhite />}\n                    </li>\n                  )}\n                </ul>\n              </li>\n            )}\n          </ul>\n        ) \n    }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}