{"ast":null,"code":"var _jsxFileName = \"/Users/zachary/work/\\u6C42\\u804C/chess_knight/frontend/src/common/Board.js\";\nimport React from 'react';\nimport { KnightWhite, Destination, Knight } from './Icon';\nimport './Board.scss';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.init = () => {\n      this.setState({\n        boardElements: [0, 1, 2, 3, 4, 5, 6, 7]\n      });\n    };\n\n    this.isKnight = (x, y) => {};\n\n    this.isDestination = (x, y) => {};\n\n    this.state = {\n      boardSize: 8,\n      boardElements: []\n    };\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  render() {\n    const boardElements = this.state.boardElements;\n    const _this$props = this.props,\n          knight = _this$props.knight,\n          destination = _this$props.destination;\n    console.log(knight, destination);\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, boardElements.map(x => React.createElement(\"li\", {\n      key: x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, boardElements.map(y => React.createElement(\"li\", {\n      key: \"\".concat(x, \"-\").concat(y),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.isKnight(x, y) && React.createElement(Knight, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), this.isDestination(x, y) && React.createElement(Destination, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/zachary/work/求职/chess_knight/frontend/src/common/Board.js"],"names":["React","KnightWhite","Destination","Knight","Board","Component","constructor","props","init","setState","boardElements","isKnight","x","y","isDestination","state","boardSize","componentDidMount","render","knight","destination","console","log","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAuBC,WAAvB,EAAoCC,MAApC,QAAkD,QAAlD;AACA,OAAO,cAAP;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,IAZmB,GAYZ,MAAM;AACX,WAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf;AADH,OAAd;AAGD,KAhBkB;;AAAA,SAkBnBC,QAlBmB,GAkBR,CAACC,CAAD,EAAIC,CAAJ,KAAU,CAEpB,CApBkB;;AAAA,SAsBnBC,aAtBmB,GAsBH,CAACF,CAAD,EAAIC,CAAJ,KAAU,CAEzB,CAxBkB;;AAEf,SAAKE,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,CADA;AAEXN,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAIH;;AAEDO,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,IAAL;AACD;;AAgBDU,EAAAA,MAAM,GAAG;AAAA,UACGR,aADH,GACqB,KAAKK,KAD1B,CACGL,aADH;AAAA,wBAE2B,KAAKH,KAFhC;AAAA,UAEGY,MAFH,eAEGA,MAFH;AAAA,UAEWC,WAFX,eAEWA,WAFX;AAGLC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoBC,WAApB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,aAAa,CAACa,GAAd,CAAkBX,CAAC,IAClB;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,aAAa,CAACa,GAAd,CAAkBV,CAAC,IAClB;AAAI,MAAA,GAAG,YAAKD,CAAL,cAAUC,CAAV,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,QAAL,CAAcC,CAAd,EAAiBC,CAAjB,KAAuB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1B,EAEG,KAAKC,aAAL,CAAmBF,CAAnB,EAAsBC,CAAtB,KAA4B,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF/B,CADD,CADH,CADF,CADD,CADH,CADF;AAgBH;;AA/C+B;;AAkDpC,eAAeT,KAAf","sourcesContent":["import React from 'react';\nimport { KnightWhite,  Destination, Knight } from './Icon';\nimport './Board.scss';\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          boardSize: 8,\n          boardElements: []\n        }\n    }\n\n    componentDidMount() {\n      this.init();\n    }\n\n    init = () => {\n      this.setState({\n        boardElements: [0,1,2,3,4,5,6,7]\n      })\n    }\n\n    isKnight = (x, y) => {\n\n    }\n\n    isDestination = (x, y) => {\n\n    }\n\n    render() {\n        const { boardElements } = this.state;\n        const { knight, destination } = this.props;\n        console.log(knight, destination);\n        return (\n          <ul>\n            {boardElements.map(x => \n              <li key={x}>\n                <ul>\n                  {boardElements.map(y => \n                    <li key={`${x}-${y}`}>\n                      {this.isKnight(x, y) && <Knight />}\n                      {this.isDestination(x, y) && <Destination />}\n                    </li>\n                  )}\n                </ul>\n              </li>\n            )}\n          </ul>\n        ) \n    }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}